{"version":3,"file":"index.js","sources":["../../src/layout.ts","../../src/collision.ts","../../src/drag-drop-context.tsx","../../src/create-pointer-sensor.ts","../../src/drag-drop-sensors.tsx","../../src/style.ts","../../src/create-draggable.ts","../../src/create-droppable.ts","../../src/drag-overlay.tsx","../../src/move-array-item.ts","../../src/sortable-context.tsx","../../src/combine-refs.ts","../../src/create-sortable.ts","../../src/drag-drop-debugger.tsx"],"sourcesContent":["interface Point {\n  x: number;\n  y: number;\n}\n\ninterface Transform {\n  x: number;\n  y: number;\n}\n\nclass Layout {\n  x;\n  y;\n  width;\n  height;\n\n  constructor(rect: { x: number; y: number; width: number; height: number }) {\n    this.x = Math.floor(rect.x);\n    this.y = Math.floor(rect.y);\n    this.width = Math.floor(rect.width);\n    this.height = Math.floor(rect.height);\n  }\n\n  get rect() {\n    return { x: this.x, y: this.y, width: this.width, height: this.height };\n  }\n\n  get left() {\n    return this.x;\n  }\n\n  get top() {\n    return this.y;\n  }\n\n  get right() {\n    return this.x + this.width;\n  }\n\n  get bottom() {\n    return this.y + this.height;\n  }\n\n  get center(): Point {\n    return {\n      x: this.x + this.width * 0.5,\n      y: this.y + this.height * 0.5,\n    };\n  }\n\n  get corners(): {\n    topLeft: Point;\n    topRight: Point;\n    bottomRight: Point;\n    bottomLeft: Point;\n  } {\n    return {\n      topLeft: { x: this.left, y: this.top },\n      topRight: { x: this.right, y: this.top },\n      bottomRight: { x: this.left, y: this.bottom },\n      bottomLeft: { x: this.right, y: this.bottom },\n    };\n  }\n}\n\nconst elementLayout = (element: HTMLElement): Layout => {\n  let layout = new Layout(element.getBoundingClientRect());\n\n  const { transform } = getComputedStyle(element);\n  if (transform) {\n    layout = stripTransformFromLayout(layout, transform);\n  }\n\n  return layout;\n};\n\nconst stripTransformFromLayout = (\n  layout: Layout,\n  transform: string\n): Layout => {\n  let translateX, translateY;\n\n  if (transform.startsWith(\"matrix3d(\")) {\n    const matrix = transform.slice(9, -1).split(/, /);\n    translateX = +matrix[12];\n    translateY = +matrix[13];\n  } else if (transform.startsWith(\"matrix(\")) {\n    const matrix = transform.slice(7, -1).split(/, /);\n    translateX = +matrix[4];\n    translateY = +matrix[5];\n  } else {\n    translateX = 0;\n    translateY = 0;\n  }\n\n  return new Layout({\n    ...layout,\n    x: layout.x - translateX,\n    y: layout.y - translateY,\n  });\n};\n\nconst noopTransform = (): Transform => ({ x: 0, y: 0 });\n\nconst transformsAreEqual = (\n  firstTransform: Transform,\n  secondTransform: Transform\n): boolean => {\n  return (\n    firstTransform.x === secondTransform.x &&\n    firstTransform.y === secondTransform.y\n  );\n};\n\nconst transformLayout = (layout: Layout, transform: Transform): Layout => {\n  return new Layout({\n    ...layout,\n    x: layout.x + transform.x,\n    y: layout.y + transform.y,\n  });\n};\n\nconst distanceBetweenPoints = (\n  firstPoint: Point,\n  secondPoint: Point\n): number => {\n  return Math.sqrt(\n    Math.pow(firstPoint.x - secondPoint.x, 2) +\n      Math.pow(firstPoint.y - secondPoint.y, 2)\n  );\n};\n\nconst intersectionRatioOfLayouts = (\n  firstLayout: Layout,\n  secondLayout: Layout\n): number => {\n  const top = Math.max(firstLayout.top, secondLayout.top);\n  const left = Math.max(firstLayout.left, secondLayout.left);\n  const right = Math.min(firstLayout.right, secondLayout.right);\n  const bottom = Math.min(firstLayout.bottom, secondLayout.bottom);\n\n  const width = right - left;\n  const height = bottom - top;\n\n  if (left < right && top < bottom) {\n    const layout1Area = firstLayout.width * firstLayout.height;\n    const layout2Area = secondLayout.width * secondLayout.height;\n    const intersectionArea = width * height;\n    return intersectionArea / (layout1Area + layout2Area - intersectionArea);\n  }\n\n  return 0;\n};\n\nconst layoutsAreEqual = (\n  firstLayout: Layout,\n  secondLayout: Layout\n): boolean => {\n  return (\n    firstLayout.x === secondLayout.x &&\n    firstLayout.y === secondLayout.y &&\n    firstLayout.width === secondLayout.width &&\n    firstLayout.height === secondLayout.height\n  );\n};\n\nconst layoutContainsPoint = (layout: Layout, point: Point): boolean => {\n  return !(\n    point.x < layout.left ||\n    point.x > layout.right ||\n    point.y > layout.bottom ||\n    point.y < layout.top\n  );\n};\n\nexport {\n  Layout,\n  elementLayout,\n  noopTransform,\n  transformsAreEqual,\n  transformLayout,\n  stripTransformFromLayout,\n  distanceBetweenPoints,\n  intersectionRatioOfLayouts,\n  layoutsAreEqual,\n  layoutContainsPoint,\n};\nexport type { Point, Transform };\n","import { Draggable, Droppable, Id } from \"./drag-drop-context\";\nimport { distanceBetweenPoints, intersectionRatioOfLayouts } from \"./layout\";\n\ntype CollisionDetector = (\n  draggable: Draggable,\n  droppables: Droppable[],\n  context: { activeDroppableId: Id | null }\n) => Droppable | null;\n\nconst closestCenter: CollisionDetector = (draggable, droppables, context) => {\n  const point1 = draggable.transformed.center;\n  const collision = { distance: Infinity, droppable: null as Droppable | null };\n\n  for (const droppable of droppables) {\n    const distance = distanceBetweenPoints(point1, droppable.layout.center);\n\n    if (distance < collision.distance) {\n      collision.distance = distance;\n      collision.droppable = droppable;\n    } else if (\n      distance === collision.distance &&\n      droppable.id === context.activeDroppableId\n    ) {\n      collision.droppable = droppable;\n    }\n  }\n\n  return collision.droppable;\n};\n\nconst closestCorners: CollisionDetector = (draggable, droppables, context) => {\n  const draggableCorners = draggable.transformed.corners;\n  const collision = { distance: Infinity, droppable: null as Droppable | null };\n\n  for (const droppable of droppables) {\n    const droppableCorners = droppable.layout.corners;\n    const distance =\n      distanceBetweenPoints(\n        droppableCorners.topLeft,\n        draggableCorners.topLeft\n      ) +\n      distanceBetweenPoints(\n        droppableCorners.topRight,\n        draggableCorners.topRight\n      ) +\n      distanceBetweenPoints(\n        droppableCorners.bottomRight,\n        draggableCorners.bottomRight\n      ) +\n      distanceBetweenPoints(\n        droppableCorners.bottomLeft,\n        draggableCorners.bottomLeft\n      );\n\n    if (distance < collision.distance) {\n      collision.distance = distance;\n      collision.droppable = droppable;\n    } else if (\n      distance === collision.distance &&\n      droppable.id === context.activeDroppableId\n    ) {\n      collision.droppable = droppable;\n    }\n  }\n\n  return collision.droppable;\n};\n\nconst mostIntersecting: CollisionDetector = (\n  draggable,\n  droppables,\n  context\n) => {\n  const draggableLayout = draggable.transformed;\n\n  const collision = { ratio: 0, droppable: null as Droppable | null };\n\n  for (const droppable of droppables) {\n    const ratio = intersectionRatioOfLayouts(draggableLayout, droppable.layout);\n\n    if (ratio > collision.ratio) {\n      collision.ratio = ratio;\n      collision.droppable = droppable;\n    } else if (\n      ratio > 0 &&\n      ratio === collision.ratio &&\n      droppable.id === context.activeDroppableId\n    ) {\n      collision.droppable = droppable;\n    }\n  }\n\n  return collision.droppable;\n};\n\nexport { closestCenter, closestCorners, mostIntersecting };\nexport type { CollisionDetector };\n","import {\n  batch,\n  createContext,\n  createEffect,\n  mergeProps,\n  ParentComponent,\n  ParentProps,\n  untrack,\n  useContext,\n} from \"solid-js\";\nimport { createStore, Store } from \"solid-js/store\";\n\nimport { CollisionDetector, mostIntersecting } from \"./collision\";\nimport {\n  layoutsAreEqual,\n  elementLayout,\n  Layout,\n  Transform,\n  noopTransform,\n  transformLayout,\n} from \"./layout\";\n\ntype Id = string | number;\n\ninterface Coordinates {\n  x: number;\n  y: number;\n}\n\ntype SensorActivator<K extends keyof HTMLElementEventMap> = (\n  event: HTMLElementEventMap[K],\n  draggableId: Id\n) => void;\n\ninterface Sensor {\n  id: Id;\n  activators: { [K in keyof HTMLElementEventMap]?: SensorActivator<K> };\n  coordinates: {\n    origin: Coordinates;\n    current: Coordinates;\n    get delta(): Coordinates;\n  };\n}\n\ntype TransformerCallback = (transform: Transform) => Transform;\n\ninterface Transformer {\n  id: Id;\n  order: number;\n  callback: TransformerCallback;\n}\n\ninterface Item {\n  id: Id;\n  node: HTMLElement;\n  layout: Layout;\n  data: Record<string, any>;\n  transformers: Record<Id, Transformer>;\n  get transform(): Transform;\n  get transformed(): Layout;\n  _pendingCleanup?: boolean;\n}\n\ninterface Draggable extends Item {}\n\ninterface Droppable extends Item {}\n\ninterface Overlay extends Item {}\n\ntype DragEvent = {\n  draggable: Draggable;\n  droppable?: Droppable | null;\n  overlay?: Overlay | null;\n};\n\ninterface DragDropState {\n  draggables: Record<Id, Draggable>;\n  droppables: Record<Id, Droppable>;\n  sensors: Record<Id, Sensor>;\n  active: {\n    draggableId: Id | null;\n    draggable: Draggable | null;\n    droppableId: Id | null;\n    droppable: Droppable | null;\n    sensorId: Id | null;\n    sensor: Sensor | null;\n    overlay: Overlay | null;\n  };\n}\n\ninterface DragDropActions {\n  addTransformer(\n    type: \"draggables\" | \"droppables\",\n    id: Id,\n    transformer: Transformer\n  ): void;\n  removeTransformer(\n    type: \"draggables\" | \"droppables\",\n    id: Id,\n    transformerId: Id\n  ): void;\n  addDraggable(\n    draggable: Omit<Draggable, \"transform\" | \"transformed\" | \"transformers\">\n  ): void;\n  removeDraggable(id: Id): void;\n  addDroppable(\n    droppable: Omit<Droppable, \"transform\" | \"transformed\" | \"transformers\">\n  ): void;\n  removeDroppable(id: Id): void;\n  addSensor(sensor: Omit<Sensor, \"coordinates\">): void;\n  removeSensor(id: Id): void;\n  setOverlay(overlay: Pick<Overlay, \"node\" | \"layout\">): void;\n  clearOverlay(): void;\n  recomputeLayouts(): boolean;\n  detectCollisions(): void;\n  draggableActivators(draggableId: Id, asHandlers?: boolean): Listeners;\n  sensorStart(id: Id, coordinates: Coordinates): void;\n  sensorMove(coordinates: Coordinates): void;\n  sensorEnd(): void;\n  dragStart(draggableId: Id): void;\n  dragEnd(): void;\n  onDragStart(handler: DragEventHandler): void;\n  onDragMove(handler: DragEventHandler): void;\n  onDragOver(handler: DragEventHandler): void;\n  onDragEnd(handler: DragEventHandler): void;\n}\n\ninterface DragDropContextProps {\n  onDragStart?: DragEventHandler;\n  onDragMove?: DragEventHandler;\n  onDragOver?: DragEventHandler;\n  onDragEnd?: DragEventHandler;\n  collisionDetector?: CollisionDetector;\n}\n\ntype DragDropContext = [Store<DragDropState>, DragDropActions];\n\ntype Listeners = Record<\n  string,\n  (event: HTMLElementEventMap[keyof HTMLElementEventMap]) => void\n>;\n\ntype DragEventHandler = (event: DragEvent) => void;\n\nconst Context = createContext<DragDropContext>();\n\nconst DragDropProvider: ParentComponent<DragDropContextProps> = (\n  passedProps\n) => {\n  const props: Pick<Required<DragDropContextProps>, \"collisionDetector\"> &\n    Omit<ParentProps<DragDropContextProps>, \"collisionDetector\"> = mergeProps(\n    { collisionDetector: mostIntersecting },\n    passedProps\n  );\n\n  const [state, setState] = createStore<DragDropState>({\n    draggables: {},\n    droppables: {},\n    sensors: {},\n    active: {\n      draggableId: null,\n      get draggable(): Draggable | null {\n        return state.active.draggableId !== null\n          ? state.draggables[state.active.draggableId]\n          : null;\n      },\n      droppableId: null,\n      get droppable(): Droppable | null {\n        return state.active.droppableId !== null\n          ? state.droppables[state.active.droppableId]\n          : null;\n      },\n      sensorId: null,\n      get sensor(): Sensor | null {\n        return state.active.sensorId !== null\n          ? state.sensors[state.active.sensorId]\n          : null;\n      },\n      overlay: null,\n    },\n  });\n\n  const addTransformer: DragDropActions[\"addTransformer\"] = (\n    type,\n    id,\n    transformer\n  ) => {\n    const displayType = type.substring(0, type.length - 1);\n\n    if (!untrack(() => state[type][id])) {\n      console.warn(\n        `Cannot add transformer to nonexistent ${displayType} with id: ${id}`\n      );\n      return;\n    }\n\n    setState(type, id, \"transformers\", transformer.id, transformer);\n  };\n\n  const removeTransformer: DragDropActions[\"removeTransformer\"] = (\n    type,\n    id,\n    transformerId\n  ) => {\n    const displayType = type.substring(0, type.length - 1);\n\n    if (!untrack(() => state[type][id])) {\n      console.warn(\n        `Cannot remove transformer from nonexistent ${displayType} with id: ${id}`\n      );\n      return;\n    }\n\n    if (!untrack(() => state[type][id][\"transformers\"][transformerId])) {\n      console.warn(\n        `Cannot remove from ${displayType} with id ${id}, nonexistent transformer with id: ${transformerId}`\n      );\n      return;\n    }\n\n    setState(type, id, \"transformers\", transformerId, undefined!);\n  };\n\n  const addDraggable: DragDropActions[\"addDraggable\"] = ({\n    id,\n    node,\n    layout,\n    data,\n  }) => {\n    const existingDraggable = state.draggables[id];\n\n    const draggable = {\n      id,\n      node,\n      layout,\n      data,\n      _pendingCleanup: false,\n    };\n    let transformer: Transformer | undefined;\n\n    if (!existingDraggable) {\n      Object.defineProperties(draggable, {\n        transformers: {\n          enumerable: true,\n          configurable: true,\n          writable: true,\n          value: {},\n        },\n        transform: {\n          enumerable: true,\n          configurable: true,\n          get: () => {\n            if (state.active.overlay) {\n              return noopTransform();\n            }\n\n            const transformers = Object.values(\n              state.draggables[id].transformers\n            );\n            transformers.sort((a, b) => a.order - b.order);\n\n            return transformers.reduce(\n              (transform: Transform, transformer: Transformer) => {\n                return transformer.callback(transform);\n              },\n              noopTransform()\n            );\n          },\n        },\n        transformed: {\n          enumerable: true,\n          configurable: true,\n          get: () => {\n            return transformLayout(\n              state.draggables[id].layout,\n              state.draggables[id].transform\n            );\n          },\n        },\n      });\n    } else if (state.active.draggableId === id && !state.active.overlay) {\n      const layoutDelta = {\n        x: existingDraggable.layout.x - layout.x,\n        y: existingDraggable.layout.y - layout.y,\n      };\n\n      const transformerId = \"addDraggable-existing-offset\";\n      const existingTransformer = existingDraggable.transformers[transformerId];\n      const transformOffset = existingTransformer\n        ? existingTransformer.callback(layoutDelta)\n        : layoutDelta;\n\n      transformer = {\n        id: transformerId,\n        order: 100,\n        callback: (transform) => {\n          return {\n            x: transform.x + transformOffset.x,\n            y: transform.y + transformOffset.y,\n          };\n        },\n      };\n\n      onDragEnd(() => removeTransformer(\"draggables\", id, transformerId));\n    }\n\n    batch(() => {\n      setState(\"draggables\", id, draggable);\n      if (transformer) {\n        addTransformer(\"draggables\", id, transformer);\n      }\n    });\n\n    if (state.active.draggable) {\n      recomputeLayouts();\n    }\n  };\n\n  const removeDraggable: DragDropActions[\"removeDraggable\"] = (id) => {\n    if (!untrack(() => state.draggables[id])) {\n      console.warn(`Cannot remove nonexistent draggable with id: ${id}`);\n      return;\n    }\n\n    setState(\"draggables\", id, \"_pendingCleanup\", true);\n    queueMicrotask(() => cleanupDraggable(id));\n  };\n\n  const cleanupDraggable = (id: Id) => {\n    if (state.draggables[id]?._pendingCleanup) {\n      const cleanupActive = state.active.draggableId === id;\n      batch(() => {\n        if (cleanupActive) {\n          setState(\"active\", \"draggableId\", null);\n        }\n        setState(\"draggables\", id, undefined!);\n      });\n    }\n  };\n\n  const addDroppable: DragDropActions[\"addDroppable\"] = ({\n    id,\n    node,\n    layout,\n    data,\n  }) => {\n    const existingDroppable = state.droppables[id];\n\n    const droppable = {\n      id,\n      node,\n      layout,\n      data,\n      _pendingCleanup: false,\n    };\n\n    if (!existingDroppable) {\n      Object.defineProperties(droppable, {\n        transformers: {\n          enumerable: true,\n          configurable: true,\n          writable: true,\n          value: {},\n        },\n        transform: {\n          enumerable: true,\n          configurable: true,\n          get: () => {\n            const transformers = Object.values(\n              state.droppables[id].transformers\n            );\n            transformers.sort((a, b) => a.order - b.order);\n\n            return transformers.reduce(\n              (transform: Transform, transformer: Transformer) => {\n                return transformer.callback(transform);\n              },\n              noopTransform()\n            );\n          },\n        },\n        transformed: {\n          enumerable: true,\n          configurable: true,\n          get: () => {\n            return transformLayout(\n              state.droppables[id].layout,\n              state.droppables[id].transform\n            );\n          },\n        },\n      });\n    }\n\n    setState(\"droppables\", id, droppable);\n\n    if (state.active.draggable) {\n      recomputeLayouts();\n    }\n  };\n\n  const removeDroppable: DragDropActions[\"removeDroppable\"] = (id) => {\n    if (!untrack(() => state.droppables[id])) {\n      console.warn(`Cannot remove nonexistent droppable with id: ${id}`);\n      return;\n    }\n\n    setState(\"droppables\", id, \"_pendingCleanup\", true);\n    queueMicrotask(() => cleanupDroppable(id));\n  };\n\n  const cleanupDroppable = (id: Id) => {\n    if (state.droppables[id]?._pendingCleanup) {\n      const cleanupActive = state.active.droppableId === id;\n      batch(() => {\n        if (cleanupActive) {\n          setState(\"active\", \"droppableId\", null);\n        }\n        setState(\"droppables\", id, undefined!);\n      });\n    }\n  };\n\n  const addSensor: DragDropActions[\"addSensor\"] = ({ id, activators }) => {\n    setState(\"sensors\", id, {\n      id,\n      activators,\n      coordinates: {\n        origin: { x: 0, y: 0 },\n        current: { x: 0, y: 0 },\n        get delta() {\n          return {\n            x:\n              state.sensors[id].coordinates.current.x -\n              state.sensors[id].coordinates.origin.x,\n            y:\n              state.sensors[id].coordinates.current.y -\n              state.sensors[id].coordinates.origin.y,\n          };\n        },\n      },\n    });\n  };\n\n  const removeSensor: DragDropActions[\"removeSensor\"] = (id) => {\n    if (!untrack(() => state.sensors[id])) {\n      console.warn(`Cannot remove nonexistent sensor with id: ${id}`);\n      return;\n    }\n\n    const cleanupActive = state.active.sensorId === id;\n    batch(() => {\n      if (cleanupActive) {\n        setState(\"active\", \"sensorId\", null);\n      }\n      setState(\"sensors\", id, undefined!);\n    });\n  };\n\n  const setOverlay: DragDropActions[\"setOverlay\"] = ({ node, layout }) => {\n    const existing = state.active.overlay;\n    const overlay = {\n      node,\n      layout,\n    };\n\n    if (!existing) {\n      Object.defineProperties(overlay, {\n        id: {\n          enumerable: true,\n          configurable: true,\n          get: () => state.active.draggable?.id,\n        },\n        data: {\n          enumerable: true,\n          configurable: true,\n          get: () => state.active.draggable?.data,\n        },\n        transformers: {\n          enumerable: true,\n          configurable: true,\n          get: () =>\n            Object.fromEntries(\n              Object.entries(\n                state.active.draggable\n                  ? state.active.draggable.transformers\n                  : {}\n              ).filter(([id]) => id !== \"addDraggable-existing-offset\")\n            ),\n        },\n        transform: {\n          enumerable: true,\n          configurable: true,\n          get: () => {\n            const transformers = Object.values(\n              state.active.overlay ? state.active.overlay.transformers : []\n            );\n            transformers.sort((a, b) => a.order - b.order);\n\n            return transformers.reduce(\n              (transform: Transform, transformer: Transformer) => {\n                return transformer.callback(transform);\n              },\n              noopTransform()\n            );\n          },\n        },\n        transformed: {\n          enumerable: true,\n          configurable: true,\n          get: () => {\n            return state.active.overlay\n              ? transformLayout(\n                  state.active.overlay!.layout,\n                  state.active.overlay!.transform\n                )\n              : new Layout({ x: 0, y: 0, width: 0, height: 0 });\n          },\n        },\n      });\n    }\n\n    setState(\"active\", \"overlay\", overlay);\n  };\n\n  const clearOverlay: DragDropActions[\"clearOverlay\"] = () =>\n    setState(\"active\", \"overlay\", null);\n\n  const sensorStart: DragDropActions[\"sensorStart\"] = (id, coordinates) => {\n    batch(() => {\n      setState(\"sensors\", id, \"coordinates\", {\n        origin: { ...coordinates },\n        current: { ...coordinates },\n      });\n      setState(\"active\", \"sensorId\", id);\n    });\n  };\n\n  const sensorMove: DragDropActions[\"sensorMove\"] = (coordinates) => {\n    const sensorId = state.active.sensorId;\n    if (!sensorId) {\n      console.warn(\"Cannot move sensor when no sensor active.\");\n      return;\n    }\n\n    setState(\"sensors\", sensorId, \"coordinates\", \"current\", {\n      ...coordinates,\n    });\n  };\n\n  const sensorEnd: DragDropActions[\"sensorEnd\"] = () =>\n    setState(\"active\", \"sensorId\", null);\n\n  const draggableActivators: DragDropActions[\"draggableActivators\"] = (\n    draggableId,\n    asHandlers\n  ) => {\n    const eventMap: Record<\n      string,\n      Array<{\n        sensor: Sensor;\n        activator: SensorActivator<keyof HTMLElementEventMap>;\n      }>\n    > = {};\n\n    for (const sensor of Object.values(state.sensors)) {\n      if (sensor) {\n        for (const [type, activator] of Object.entries(sensor.activators)) {\n          eventMap[type] ??= [];\n          eventMap[type].push({\n            sensor,\n            activator: activator as SensorActivator<keyof HTMLElementEventMap>,\n          });\n        }\n      }\n    }\n\n    const listeners: Listeners = {};\n    for (const key in eventMap) {\n      let handlerKey = key;\n      if (asHandlers) {\n        handlerKey = `on${key}`;\n      }\n      listeners[handlerKey] = (event) => {\n        for (const { activator } of eventMap[key]) {\n          if (state.active.sensor) {\n            break;\n          }\n          activator(event, draggableId);\n        }\n      };\n    }\n\n    return listeners;\n  };\n\n  const recomputeLayouts: DragDropActions[\"recomputeLayouts\"] = () => {\n    let anyLayoutChanged = false;\n\n    const draggables = Object.values(state.draggables);\n    const droppables = Object.values(state.droppables);\n    const overlay = state.active.overlay;\n\n    batch(() => {\n      const cache: WeakMap<Element, Layout> = new WeakMap();\n\n      for (const draggable of draggables) {\n        if (draggable) {\n          const currentLayout = draggable.layout;\n\n          if (!cache.has(draggable.node))\n            cache.set(draggable.node, elementLayout(draggable.node));\n          const layout = cache.get(draggable.node)!;\n\n          if (!layoutsAreEqual(currentLayout, layout)) {\n            setState(\"draggables\", draggable.id, \"layout\", layout);\n            anyLayoutChanged = true;\n          }\n        }\n      }\n\n      for (const droppable of droppables) {\n        if (droppable) {\n          const currentLayout = droppable.layout;\n\n          if (!cache.has(droppable.node))\n            cache.set(droppable.node, elementLayout(droppable.node));\n          const layout = cache.get(droppable.node)!;\n\n          if (!layoutsAreEqual(currentLayout, layout)) {\n            setState(\"droppables\", droppable.id, \"layout\", layout);\n            anyLayoutChanged = true;\n          }\n        }\n      }\n\n      if (overlay) {\n        const currentLayout = overlay.layout;\n        const layout = elementLayout(overlay.node);\n        if (!layoutsAreEqual(currentLayout, layout)) {\n          setState(\"active\", \"overlay\", \"layout\", layout);\n          anyLayoutChanged = true;\n        }\n      }\n    });\n\n    return anyLayoutChanged;\n  };\n\n  const detectCollisions: DragDropActions[\"detectCollisions\"] = () => {\n    const draggable = state.active.overlay ?? state.active.draggable;\n    if (draggable) {\n      const droppable = props.collisionDetector(\n        draggable,\n        Object.values(state.droppables),\n        {\n          activeDroppableId: state.active.droppableId,\n        }\n      );\n\n      const droppableId: Id | null = droppable ? droppable.id : null;\n\n      if (state.active.droppableId !== droppableId) {\n        setState(\"active\", \"droppableId\", droppableId);\n      }\n    }\n  };\n\n  const dragStart: DragDropActions[\"dragStart\"] = (draggableId) => {\n    const transformer: Transformer = {\n      id: \"sensorMove\",\n      order: 0,\n      callback: (transform) => {\n        if (state.active.sensor) {\n          return {\n            x: transform.x + state.active.sensor.coordinates.delta.x,\n            y: transform.y + state.active.sensor.coordinates.delta.y,\n          };\n        }\n        return transform;\n      },\n    };\n\n    recomputeLayouts();\n\n    batch(() => {\n      setState(\"active\", \"draggableId\", draggableId);\n      addTransformer(\"draggables\", draggableId, transformer);\n    });\n\n    detectCollisions();\n  };\n\n  const dragEnd: DragDropActions[\"dragEnd\"] = () => {\n    const draggableId = untrack(() => state.active.draggableId);\n    batch(() => {\n      if (draggableId !== null) {\n        removeTransformer(\"draggables\", draggableId, \"sensorMove\");\n      }\n      setState(\"active\", [\"draggableId\", \"droppableId\"], null);\n    });\n\n    recomputeLayouts();\n  };\n\n  const onDragStart: DragDropActions[\"onDragStart\"] = (handler) => {\n    createEffect(() => {\n      const draggable = state.active.draggable;\n      if (draggable) {\n        untrack(() => handler({ draggable }));\n      }\n    });\n  };\n\n  const onDragMove: DragDropActions[\"onDragMove\"] = (handler) => {\n    createEffect(() => {\n      const draggable = state.active.draggable;\n      if (draggable) {\n        const overlay = untrack(() => state.active.overlay);\n        Object.values(overlay ? overlay.transform : draggable.transform);\n        untrack(() => handler({ draggable, overlay }));\n      }\n    });\n  };\n\n  const onDragOver: DragDropActions[\"onDragMove\"] = (handler) => {\n    createEffect(() => {\n      const draggable = state.active.draggable;\n      const droppable = state.active.droppable;\n      if (draggable) {\n        untrack(() =>\n          handler({ draggable, droppable, overlay: state.active.overlay })\n        );\n      }\n    });\n  };\n\n  const onDragEnd: DragDropActions[\"onDragEnd\"] = (handler) => {\n    createEffect(\n      ({ previousDraggable, previousDroppable, previousOverlay }) => {\n        const draggable = state.active.draggable;\n        const droppable = draggable ? state.active.droppable : null;\n        const overlay = draggable ? state.active.overlay : null;\n\n        if (!draggable && previousDraggable) {\n          untrack(() =>\n            handler({\n              draggable: previousDraggable,\n              droppable: previousDroppable,\n              overlay: previousOverlay,\n            })\n          );\n        }\n        return {\n          previousDraggable: draggable,\n          previousDroppable: droppable,\n          previousOverlay: overlay,\n        };\n      },\n      {\n        previousDraggable: null,\n        previousDroppable: null,\n        previousOverlay: null,\n      }\n    );\n  };\n\n  onDragMove(() => detectCollisions());\n\n  props.onDragStart && onDragStart(props.onDragStart);\n  props.onDragMove && onDragMove(props.onDragMove);\n  props.onDragOver && onDragOver(props.onDragOver);\n  props.onDragEnd && onDragEnd(props.onDragEnd);\n\n  const actions = {\n    addTransformer,\n    removeTransformer,\n    addDraggable,\n    removeDraggable,\n    addDroppable,\n    removeDroppable,\n    addSensor,\n    removeSensor,\n    setOverlay,\n    clearOverlay,\n    recomputeLayouts,\n    detectCollisions,\n    draggableActivators,\n    sensorStart,\n    sensorMove,\n    sensorEnd,\n    dragStart,\n    dragEnd,\n    onDragStart,\n    onDragMove,\n    onDragOver,\n    onDragEnd,\n  };\n\n  const context: DragDropContext = [state, actions];\n\n  return <Context.Provider value={context}>{props.children}</Context.Provider>;\n};\n\nconst useDragDropContext = (): DragDropContext | null => {\n  return useContext(Context) || null;\n};\n\nexport { Context, DragDropProvider, useDragDropContext };\nexport type {\n  Id,\n  Coordinates,\n  Listeners,\n  DragEventHandler,\n  DragEvent,\n  DragDropState,\n  Item,\n  Draggable,\n  Droppable,\n  Overlay,\n  SensorActivator,\n  Transformer,\n};","import { onCleanup, onMount } from \"solid-js\";\n\nimport {\n  Coordinates,\n  Id,\n  SensorActivator,\n  useDragDropContext,\n} from \"./drag-drop-context\";\nimport { Transform } from \"./layout\";\n\nconst createPointerSensor = (id: Id = \"pointer-sensor\"): void => {\n  const [\n    state,\n    {\n      addSensor,\n      removeSensor,\n      sensorStart,\n      sensorMove,\n      sensorEnd,\n      dragStart,\n      dragEnd,\n    },\n  ] = useDragDropContext()!;\n  const activationDelay = 250; // milliseconds\n  const activationDistance = 10; // pixels\n\n  onMount(() => {\n    addSensor({ id, activators: { pointerdown: attach } });\n  });\n\n  onCleanup(() => {\n    removeSensor(id);\n  });\n\n  const isActiveSensor = () => state.active.sensorId === id;\n\n  const initialCoordinates: Coordinates = { x: 0, y: 0 };\n\n  let activationDelayTimeoutId: number | null = null;\n  let activationDraggableId: Id | null = null;\n\n  const attach: SensorActivator<\"pointerdown\"> = (event, draggableId) => {\n    document.addEventListener(\"pointermove\", onPointerMove);\n    document.addEventListener(\"pointerup\", onPointerUp);\n\n    activationDraggableId = draggableId;\n    initialCoordinates.x = event.clientX;\n    initialCoordinates.y = event.clientY;\n\n    activationDelayTimeoutId = window.setTimeout(onActivate, activationDelay);\n  };\n\n  const detach = (): void => {\n    if (activationDelayTimeoutId) {\n      clearTimeout(activationDelayTimeoutId);\n      activationDelayTimeoutId = null;\n    }\n\n    document.removeEventListener(\"pointermove\", onPointerMove);\n    document.removeEventListener(\"pointerup\", onPointerUp);\n    document.removeEventListener(\"selectionchange\", clearSelection);\n  };\n\n  const onActivate = (): void => {\n    if (!state.active.sensor) {\n      sensorStart(id, initialCoordinates);\n      dragStart(activationDraggableId!);\n\n      clearSelection();\n      document.addEventListener(\"selectionchange\", clearSelection);\n    } else if (!isActiveSensor()) {\n      detach();\n    }\n  };\n\n  const onPointerMove = (event: PointerEvent): void => {\n    const coordinates: Coordinates = { x: event.clientX, y: event.clientY };\n\n    if (!state.active.sensor) {\n      const transform: Transform = {\n        x: coordinates.x - initialCoordinates.x,\n        y: coordinates.y - initialCoordinates.y,\n      };\n\n      if (Math.sqrt(transform.x ** 2 + transform.y ** 2) > activationDistance) {\n        onActivate();\n      }\n    }\n\n    if (isActiveSensor()) {\n      event.preventDefault();\n      sensorMove(coordinates);\n    }\n  };\n\n  const onPointerUp = (event: PointerEvent): void => {\n    detach();\n    if (isActiveSensor()) {\n      event.preventDefault();\n      dragEnd();\n      sensorEnd();\n    }\n  };\n\n  const clearSelection = () => {\n    window.getSelection()?.removeAllRanges();\n  };\n};\n\nexport { createPointerSensor };\n","import { ParentComponent } from \"solid-js\";\n\nimport { createPointerSensor } from \"./create-pointer-sensor\";\n\nconst DragDropSensors: ParentComponent = (props) => {\n  createPointerSensor();\n  return <>{props.children}</>;\n};\n\nexport { DragDropSensors };\n","import { JSX } from \"solid-js/jsx-runtime\";\n\nimport { Layout, noopTransform, Transform, transformsAreEqual } from \"./layout\";\n\nconst layoutStyle = (layout: Layout): JSX.CSSProperties => {\n  return {\n    top: `${layout.y}px`,\n    left: `${layout.x}px`,\n    width: `${layout.width}px`,\n    height: `${layout.height}px`,\n  };\n};\n\nconst transformStyle = (transform: Transform): JSX.CSSProperties => {\n  return { transform: `translate3d(${transform.x}px, ${transform.y}px, 0)` };\n};\n\nconst maybeTransformStyle = (transform: Transform): JSX.CSSProperties => {\n  return transformsAreEqual(transform, noopTransform())\n    ? {}\n    : transformStyle(transform);\n};\n\nexport { layoutStyle, transformStyle, maybeTransformStyle };\n","import {\n  createEffect,\n  createSignal,\n  onCleanup,\n  onMount,\n  Setter,\n} from \"solid-js\";\n\nimport { Id, Listeners, useDragDropContext } from \"./drag-drop-context\";\nimport {\n  elementLayout,\n  noopTransform,\n  Transform,\n  transformsAreEqual,\n} from \"./layout\";\nimport { transformStyle } from \"./style\";\n\ninterface Draggable {\n  (element: HTMLElement, accessor?: () => { skipTransform?: boolean }): void;\n  ref: Setter<HTMLElement | null>;\n  get isActiveDraggable(): boolean;\n  get dragActivators(): Listeners;\n  get transform(): Transform;\n}\n\nconst createDraggable = (id: Id, data: Record<string, any> = {}): Draggable => {\n  const [state, { addDraggable, removeDraggable, draggableActivators }] =\n    useDragDropContext()!;\n  const [node, setNode] = createSignal<HTMLElement | null>(null);\n\n  onMount(() => {\n    const resolvedNode = node();\n\n    if (resolvedNode) {\n      addDraggable({\n        id,\n        node: resolvedNode,\n        layout: elementLayout(resolvedNode),\n        data,\n      });\n    }\n  });\n  onCleanup(() => removeDraggable(id));\n\n  const isActiveDraggable = () => state.active.draggableId === id;\n  const transform = () => {\n    return state.draggables[id]?.transform || noopTransform();\n  };\n\n  const draggable = Object.defineProperties(\n    (element: HTMLElement, accessor?: () => { skipTransform?: boolean }) => {\n      const config = accessor ? accessor() : {};\n\n      createEffect(() => {\n        const resolvedNode = node();\n        const activators = draggableActivators(id);\n\n        if (resolvedNode) {\n          for (const key in activators) {\n            resolvedNode.addEventListener(key, activators[key]);\n          }\n        }\n\n        onCleanup(() => {\n          if (resolvedNode) {\n            for (const key in activators) {\n              resolvedNode.removeEventListener(key, activators[key]);\n            }\n          }\n        });\n      });\n\n      setNode(element);\n\n      if (!config.skipTransform) {\n        createEffect(() => {\n          const resolvedTransform = transform();\n\n          if (!transformsAreEqual(resolvedTransform, noopTransform())) {\n            const style = transformStyle(transform());\n            element.style.setProperty(\"transform\", style.transform);\n          } else {\n            element.style.removeProperty(\"transform\");\n          }\n        });\n      }\n    },\n    {\n      ref: {\n        enumerable: true,\n        value: setNode,\n      },\n      isActiveDraggable: {\n        enumerable: true,\n        get: isActiveDraggable,\n      },\n      dragActivators: {\n        enumerable: true,\n        get: () => {\n          return draggableActivators(id, true);\n        },\n      },\n      transform: {\n        enumerable: true,\n        get: transform,\n      },\n    }\n  ) as Draggable;\n\n  return draggable;\n};\n\nexport { createDraggable };\n","import {\n  createEffect,\n  createSignal,\n  onCleanup,\n  onMount,\n  Setter,\n} from \"solid-js\";\n\nimport { Id, useDragDropContext } from \"./drag-drop-context\";\nimport {\n  elementLayout,\n  noopTransform,\n  Transform,\n  transformsAreEqual,\n} from \"./layout\";\nimport { transformStyle } from \"./style\";\n\ninterface Droppable {\n  (element: HTMLElement, accessor?: () => { skipTransform?: boolean }): void;\n  ref: Setter<HTMLElement | null>;\n  get isActiveDroppable(): boolean;\n  get transform(): Transform;\n}\n\nconst createDroppable = (id: Id, data: Record<string, any> = {}): Droppable => {\n  const [state, { addDroppable, removeDroppable }] = useDragDropContext()!;\n  const [node, setNode] = createSignal<HTMLElement | null>(null);\n\n  onMount(() => {\n    const resolvedNode = node();\n\n    if (resolvedNode) {\n      addDroppable({\n        id,\n        node: resolvedNode,\n        layout: elementLayout(resolvedNode),\n        data,\n      });\n    }\n  });\n  onCleanup(() => removeDroppable(id));\n\n  const isActiveDroppable = () => state.active.droppableId === id;\n  const transform = () => {\n    return state.droppables[id]?.transform || noopTransform();\n  };\n  const droppable = Object.defineProperties(\n    (element: HTMLElement, accessor?: () => { skipTransform?: boolean }) => {\n      const config = accessor ? accessor() : {};\n\n      setNode(element);\n\n      if (!config.skipTransform) {\n        createEffect(() => {\n          const resolvedTransform = transform();\n          if (!transformsAreEqual(resolvedTransform, noopTransform())) {\n            const style = transformStyle(transform());\n            element.style.setProperty(\"transform\", style.transform);\n          } else {\n            element.style.removeProperty(\"transform\");\n          }\n        });\n      }\n    },\n    {\n      ref: {\n        enumerable: true,\n        value: setNode,\n      },\n      isActiveDroppable: {\n        enumerable: true,\n        get: isActiveDroppable,\n      },\n      transform: {\n        enumerable: true,\n        get: transform,\n      },\n    }\n  ) as Droppable;\n\n  return droppable;\n};\n\nexport { createDroppable };\n","import { Portal } from \"solid-js/web\";\nimport { JSX, ParentComponent, Show } from \"solid-js\";\n\nimport { Draggable, useDragDropContext } from \"./drag-drop-context\";\nimport { transformStyle } from \"./style\";\nimport { elementLayout } from \"./layout\";\n\ninterface DragOverlayProps {\n  children: JSX.Element | Element | ((activeDraggable: Draggable | null) => (JSX.Element | Element));\n  class?: string;\n  style?: JSX.CSSProperties;\n}\n\nconst DragOverlay: ParentComponent<DragOverlayProps> = (props) => {\n  const [state, { onDragStart, onDragEnd, setOverlay, clearOverlay }] =\n    useDragDropContext()!;\n\n  let node: HTMLDivElement | undefined;\n\n  onDragStart(({ draggable }) => {\n    setOverlay({\n      node: draggable.node,\n      layout: draggable.layout,\n    });\n\n    queueMicrotask(() => {\n      if (node) {\n        const layout = elementLayout(node);\n        const delta = {\n          x: (draggable.layout.width - layout.width) / 2,\n          y: (draggable.layout.height - layout.height) / 2,\n        };\n        layout.x += delta.x;\n        layout.y += delta.y;\n        setOverlay({ node, layout });\n      }\n    });\n  });\n\n  onDragEnd(() => queueMicrotask(clearOverlay));\n\n  const style = (): JSX.CSSProperties => {\n    const overlay = state.active.overlay;\n    const draggable = state.active.draggable;\n    if (!overlay || !draggable) return {};\n\n    return {\n      position: \"fixed\",\n      transition: \"transform 0s\",\n      top: `${overlay.layout.top}px`,\n      left: `${overlay.layout.left}px`,\n      \"min-width\": `${draggable.layout.width}px`,\n      \"min-height\": `${draggable.layout.height}px`,\n      ...transformStyle(overlay.transform),\n      ...props.style,\n    };\n  };\n\n  return (\n    <Portal mount={document.body}>\n      <Show when={state.active.draggable}>\n        <div ref={node} class={props.class} style={style()}>\n          {typeof props.children === \"function\"\n            ? props.children(state.active.draggable)\n            : props.children}\n        </div>\n      </Show>\n    </Portal>\n  );\n};\n\nexport { DragOverlay };\n\n","const moveArrayItem = <T>(\n  array: T[],\n  fromIndex: number,\n  toIndex: number\n): T[] => {\n  const newArray = array.slice();\n  newArray.splice(toIndex, 0, ...newArray.splice(fromIndex, 1));\n  return newArray;\n};\n\nexport { moveArrayItem };\n","import {\n  createContext,\n  createEffect,\n  ParentComponent,\n  untrack,\n  useContext,\n} from \"solid-js\";\nimport { createStore, Store } from \"solid-js/store\";\n\nimport { Id, useDragDropContext } from \"./drag-drop-context\";\nimport { moveArrayItem } from \"./move-array-item\";\n\ninterface SortableContextState {\n  initialIds: Array<Id>;\n  sortedIds: Array<Id>;\n}\n\ninterface SortableContextProps {\n  ids: Array<Id>;\n}\n\ntype SortableContext = [Store<SortableContextState>, {}];\n\nconst Context = createContext<SortableContext>();\n\nconst SortableProvider: ParentComponent<SortableContextProps> = (props) => {\n  const [dndState] = useDragDropContext()!;\n\n  const [state, setState] = createStore<SortableContextState>({\n    initialIds: [],\n    sortedIds: [],\n  });\n\n  const isValidIndex = (index: number): boolean => {\n    return index >= 0 && index < state.initialIds.length;\n  };\n\n  createEffect(() => {\n    setState(\"initialIds\", [...props.ids]);\n    setState(\"sortedIds\", [...props.ids]);\n  });\n\n  createEffect(() => {\n    if (dndState.active.draggableId && dndState.active.droppableId) {\n      untrack(() => {\n        const fromIndex = state.sortedIds.indexOf(dndState.active.draggableId!);\n        const toIndex = state.initialIds.indexOf(dndState.active.droppableId!);\n\n        if (!isValidIndex(fromIndex) || !isValidIndex(toIndex)) {\n          setState(\"sortedIds\", [...props.ids]);\n        } else if (fromIndex !== toIndex) {\n          const resorted = moveArrayItem(state.sortedIds, fromIndex, toIndex);\n          setState(\"sortedIds\", resorted);\n        }\n      });\n    } else {\n      setState(\"sortedIds\", [...props.ids]);\n    }\n  });\n\n  const actions = {};\n  const context: SortableContext = [state, actions];\n\n  return <Context.Provider value={context}>{props.children}</Context.Provider>;\n};\n\nconst useSortableContext = (): SortableContext | null => {\n  return useContext(Context) || null;\n};\n\nexport { Context, SortableProvider, useSortableContext };\n","type RefSetter<V> = (value: V) => void;\n\nconst combineRefs = <V>(\n  setRefA: RefSetter<V>,\n  setRefB: RefSetter<V>\n): RefSetter<V> => {\n  return (ref) => {\n    setRefA(ref);\n    setRefB(ref);\n  };\n};\n\nexport { combineRefs };\nexport type { RefSetter };\n","import { createEffect, onCleanup, onMount } from \"solid-js\";\n\nimport { createDraggable } from \"./create-draggable\";\nimport { createDroppable } from \"./create-droppable\";\nimport { RefSetter, combineRefs } from \"./combine-refs\";\nimport { useSortableContext } from \"./sortable-context\";\nimport {\n  Id,\n  Listeners,\n  Transformer,\n  useDragDropContext,\n} from \"./drag-drop-context\";\nimport { Layout, noopTransform, Transform, transformsAreEqual } from \"./layout\";\nimport { transformStyle } from \"./style\";\n\ninterface Sortable {\n  (element: HTMLElement): void;\n  ref: RefSetter<HTMLElement | null>;\n  get transform(): Transform;\n  get dragActivators(): Listeners;\n  get isActiveDraggable(): boolean;\n  get isActiveDroppable(): boolean;\n}\n\nconst createSortable = (id: Id, data: Record<string, any> = {}): Sortable => {\n  const [dndState, { addTransformer, removeTransformer }] =\n    useDragDropContext()!;\n  const [sortableState] = useSortableContext()!;\n  const draggable = createDraggable(id, data);\n  const droppable = createDroppable(id, data);\n  const setNode = combineRefs(draggable.ref, droppable.ref);\n\n  const initialIndex = (): number => sortableState.initialIds.indexOf(id);\n  const currentIndex = (): number => sortableState.sortedIds.indexOf(id);\n  const layoutById = (id: Id): Layout | null =>\n    dndState.droppables[id]?.layout || null;\n\n  const sortedTransform = (): Transform => {\n    const delta = noopTransform();\n    const resolvedInitialIndex = initialIndex();\n    const resolvedCurrentIndex = currentIndex();\n\n    if (resolvedCurrentIndex !== resolvedInitialIndex) {\n      const currentLayout = layoutById(id);\n      const targetLayout = layoutById(\n        sortableState.initialIds[resolvedCurrentIndex]\n      );\n\n      if (currentLayout && targetLayout) {\n        delta.x = targetLayout.x - currentLayout.x;\n        delta.y = targetLayout.y - currentLayout.y;\n      }\n    }\n\n    return delta;\n  };\n\n  const transformer: Transformer = {\n    id: \"sortableOffset\",\n    order: 100,\n    callback: (transform) => {\n      const delta = sortedTransform();\n      return { x: transform.x + delta.x, y: transform.y + delta.y };\n    },\n  };\n\n  onMount(() => addTransformer(\"droppables\", id, transformer));\n  onCleanup(() => removeTransformer(\"droppables\", id, transformer.id));\n\n  const transform = (): Transform => {\n    return (\n      (id === dndState.active.draggableId && !dndState.active.overlay\n        ? dndState.draggables[id]?.transform\n        : dndState.droppables[id]?.transform) || noopTransform()\n    );\n  };\n\n  const sortable = Object.defineProperties(\n    (element: HTMLElement) => {\n      draggable(element, () => ({ skipTransform: true }));\n      droppable(element, () => ({ skipTransform: true }));\n\n      createEffect(() => {\n        const resolvedTransform = transform();\n        if (!transformsAreEqual(resolvedTransform, noopTransform())) {\n          const style = transformStyle(transform());\n          element.style.setProperty(\"transform\", style.transform);\n        } else {\n          element.style.removeProperty(\"transform\");\n        }\n      });\n    },\n    {\n      ref: {\n        enumerable: true,\n        value: setNode,\n      },\n      transform: {\n        enumerable: true,\n        get: transform,\n      },\n      isActiveDraggable: {\n        enumerable: true,\n        get: () => draggable.isActiveDraggable,\n      },\n      dragActivators: {\n        enumerable: true,\n        get: () => draggable.dragActivators,\n      },\n      isActiveDroppable: {\n        enumerable: true,\n        get: () => droppable.isActiveDroppable,\n      },\n    }\n  ) as unknown as Sortable;\n\n  return sortable;\n};\n\nexport { createSortable };\n","import {\n  Component,\n  For,\n  JSX,\n  mergeProps,\n  onCleanup,\n  onMount,\n  Show,\n} from \"solid-js\";\nimport { Portal } from \"solid-js/web\";\n\nimport { Id, useDragDropContext } from \"./drag-drop-context\";\nimport { Layout, Transform } from \"./layout\";\nimport { layoutStyle, transformStyle } from \"./style\";\n\ninterface HighlighterProps {\n  id: Id;\n  layout: Layout;\n  active?: boolean;\n  color?: string;\n  style?: JSX.CSSProperties;\n}\n\nconst Highlighter: Component<HighlighterProps> = (props) => {\n  props = mergeProps({ color: \"red\", active: false }, props);\n  return (\n    <div\n      style={{\n        position: \"fixed\",\n        \"pointer-events\": \"none\",\n        ...layoutStyle(props.layout),\n        outline: \"1px dashed\",\n        \"outline-width\": props.active ? \"4px\" : \"1px\",\n        \"outline-color\": props.color,\n        display: \"flex\",\n        color: props.color,\n        \"align-items\": \"flex-end\",\n        \"justify-content\": \"flex-end\",\n        ...props.style,\n      }}\n    >\n      {props.id}\n    </div>\n  );\n};\n\nconst DragDropDebugger = () => {\n  const [state, { recomputeLayouts }] = useDragDropContext()!;\n\n  let ticking = false;\n\n  const update = () => {\n    if (!ticking) {\n      window.requestAnimationFrame(function () {\n        recomputeLayouts();\n        ticking = false;\n      });\n\n      ticking = true;\n    }\n  };\n\n  onMount(() => {\n    document.addEventListener(\"scroll\", update);\n  });\n\n  onCleanup(() => {\n    document.removeEventListener(\"scroll\", update);\n  });\n\n  return (\n    <Portal mount={document.body}>\n      <For each={Object.values(state.droppables)}>\n        {(droppable) =>\n          droppable ? (\n            <Highlighter\n              id={droppable.id}\n              layout={droppable.layout}\n              active={droppable.id === state.active.droppableId}\n            />\n          ) : null\n        }\n      </For>\n      <For each={Object.values(state.draggables)}>\n        {(draggable) =>\n          draggable ? (\n            <Highlighter\n              id={draggable.id}\n              layout={draggable.layout}\n              active={draggable.id === state.active.draggableId}\n              color=\"blue\"\n              style={{\n                \"align-items\": \"flex-start\",\n                \"justify-content\": \"flex-start\",\n                ...transformStyle(draggable.transform),\n              }}\n            />\n          ) : null\n        }\n      </For>\n      <Show when={state.active.overlay} keyed>\n        {(overlay) => (\n          <Highlighter\n            id={overlay.id}\n            layout={overlay.layout}\n            active={true}\n            color=\"orange\"\n            style={{\n              ...transformStyle(overlay.transform),\n            }}\n          />\n        )}\n      </Show>\n    </Portal>\n  );\n};\n\nexport { DragDropDebugger };\n"],"names":["Layout","constructor","rect","x","Math","floor","y","width","height","left","top","right","bottom","center","corners","topLeft","topRight","bottomRight","bottomLeft","elementLayout","element","layout","getBoundingClientRect","transform","getComputedStyle","stripTransformFromLayout","translateX","translateY","startsWith","matrix","slice","split","noopTransform","transformsAreEqual","firstTransform","secondTransform","transformLayout","distanceBetweenPoints","firstPoint","secondPoint","sqrt","pow","intersectionRatioOfLayouts","firstLayout","secondLayout","max","min","layout1Area","layout2Area","intersectionArea","layoutsAreEqual","closestCenter","draggable","droppables","context","point1","transformed","collision","distance","Infinity","droppable","id","activeDroppableId","closestCorners","draggableCorners","droppableCorners","mostIntersecting","draggableLayout","ratio","Context","createContext","DragDropProvider","passedProps","props","mergeProps","collisionDetector","state","setState","createStore","draggables","sensors","active","draggableId","droppableId","sensorId","sensor","overlay","addTransformer","type","transformer","displayType","substring","length","untrack","console","warn","removeTransformer","transformerId","undefined","addDraggable","node","data","existingDraggable","_pendingCleanup","Object","defineProperties","transformers","enumerable","configurable","writable","value","get","values","sort","a","b","order","reduce","callback","layoutDelta","existingTransformer","transformOffset","onDragEnd","batch","recomputeLayouts","removeDraggable","queueMicrotask","cleanupDraggable","cleanupActive","addDroppable","existingDroppable","removeDroppable","cleanupDroppable","addSensor","activators","coordinates","origin","current","delta","removeSensor","setOverlay","existing","fromEntries","entries","filter","clearOverlay","sensorStart","sensorMove","sensorEnd","draggableActivators","asHandlers","eventMap","activator","push","listeners","key","handlerKey","event","anyLayoutChanged","cache","WeakMap","currentLayout","has","set","detectCollisions","dragStart","dragEnd","onDragStart","handler","createEffect","onDragMove","onDragOver","previousDraggable","previousDroppable","previousOverlay","actions","_$createComponent","children","useDragDropContext","useContext","createPointerSensor","activationDelay","activationDistance","onMount","pointerdown","attach","onCleanup","isActiveSensor","initialCoordinates","activationDelayTimeoutId","activationDraggableId","document","addEventListener","onPointerMove","onPointerUp","clientX","clientY","window","setTimeout","onActivate","detach","clearTimeout","removeEventListener","clearSelection","preventDefault","getSelection","removeAllRanges","DragDropSensors","layoutStyle","transformStyle","maybeTransformStyle","createDraggable","setNode","createSignal","resolvedNode","isActiveDraggable","accessor","config","skipTransform","resolvedTransform","style","setProperty","removeProperty","ref","dragActivators","createDroppable","isActiveDroppable","DragOverlay","position","transition","body","_tmpl$","_$insert","_$memo","_$effect","class","_$style","moveArrayItem","array","fromIndex","toIndex","newArray","splice","SortableProvider","dndState","initialIds","sortedIds","isValidIndex","index","ids","indexOf","resorted","useSortableContext","combineRefs","setRefA","setRefB","createSortable","sortableState","initialIndex","currentIndex","layoutById","sortedTransform","resolvedInitialIndex","resolvedCurrentIndex","targetLayout","sortable","Highlighter","color","outline","display","DragDropDebugger","ticking","update","requestAnimationFrame"],"mappings":"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"}